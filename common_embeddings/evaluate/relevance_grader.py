"""
Relevance grader for evaluation dataset.

Grades the relevance of articles to queries.
"""

from typing import Dict, List, Any


class RelevanceGrader:
    """Grades relevance of articles to queries."""
    
    def __init__(self):
        """Initialize relevance grader."""
        pass
    
    def grade_relevance(
        self,
        queries: List[Dict[str, Any]],
        articles: List[Dict[str, Any]]
    ) -> Dict[str, Any]:
        """
        Grade relevance of articles to queries.
        
        This is typically done manually or with LLM assistance.
        The current implementation uses the relevance annotations
        already generated by the query generator.
        
        Args:
            queries: List of query dictionaries
            articles: List of article dictionaries
            
        Returns:
            Ground truth dictionary with relevance scores
        """
        # For now, return the queries as-is since they already have relevance annotations
        return {
            "queries": queries,
            "articles": articles
        }