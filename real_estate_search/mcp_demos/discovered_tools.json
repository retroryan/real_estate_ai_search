{
  "tools": [
    {
      "name": "search_properties_tool",
      "description": "Search for properties using natural language queries.\n            \n            Find properties that match your criteria using semantic search. You can describe\n            what you're looking for in natural language and optionally add specific filters.\n            \n            Args:\n                query: Natural language description (e.g., \"modern home with pool near parks\")\n                property_type: Filter by type (House, Condo, Townhouse, etc.)\n                min_price: Minimum price filter\n                max_price: Maximum price filter\n                min_bedrooms: Minimum bedrooms\n                max_bedrooms: Maximum bedrooms\n                city: Filter by city\n                state: Filter by state (2-letter code like CA, NY)\n                size: Number of results (1-100, default 20)\n                search_type: \"hybrid\" (best), \"semantic\" (AI), or \"text\" (keyword)\n                \n            Returns:\n                List of matching properties with details and relevance scores\n            ",
      "parameters": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "property_type": {
            "default": null,
            "title": "Property Type",
            "type": "string"
          },
          "min_price": {
            "default": null,
            "title": "Min Price",
            "type": "number"
          },
          "max_price": {
            "default": null,
            "title": "Max Price",
            "type": "number"
          },
          "min_bedrooms": {
            "default": null,
            "title": "Min Bedrooms",
            "type": "integer"
          },
          "max_bedrooms": {
            "default": null,
            "title": "Max Bedrooms",
            "type": "integer"
          },
          "city": {
            "default": null,
            "title": "City",
            "type": "string"
          },
          "state": {
            "default": null,
            "title": "State",
            "type": "string"
          },
          "size": {
            "default": 20,
            "title": "Size",
            "type": "integer"
          },
          "search_type": {
            "default": "hybrid",
            "title": "Search Type",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      }
    },
    {
      "name": "get_property_details_tool",
      "description": "Get detailed information for a specific property.\n            \n            Args:\n                listing_id: The unique property listing ID\n                \n            Returns:\n                Complete property information including all available details\n            ",
      "parameters": {
        "properties": {
          "listing_id": {
            "title": "Listing Id",
            "type": "string"
          }
        },
        "required": [
          "listing_id"
        ],
        "type": "object"
      }
    },
    {
      "name": "search_wikipedia_tool",
      "description": "Search Wikipedia for location and topic information.\n            \n            Find information about neighborhoods, landmarks, history, and local context\n            to better understand areas and locations.\n            \n            Args:\n                query: What you're looking for (e.g., \"Mission District culture\", \"Golden Gate Bridge\")\n                search_in: \"full\" (complete articles), \"summaries\" (shorter), or \"chunks\" (sections)\n                city: Filter by city name\n                state: Filter by state (2-letter code)\n                categories: List of Wikipedia categories to filter by\n                size: Number of results (1-50, default 10)\n                search_type: \"hybrid\" (best), \"semantic\" (AI), or \"text\" (keyword)\n                \n            Returns:\n                Wikipedia articles with summaries, topics, and location information\n            ",
      "parameters": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "search_in": {
            "default": "full",
            "title": "Search In",
            "type": "string"
          },
          "city": {
            "default": null,
            "title": "City",
            "type": "string"
          },
          "state": {
            "default": null,
            "title": "State",
            "type": "string"
          },
          "categories": {
            "default": null,
            "items": {},
            "title": "Categories",
            "type": "array"
          },
          "size": {
            "default": 10,
            "title": "Size",
            "type": "integer"
          },
          "search_type": {
            "default": "hybrid",
            "title": "Search Type",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      }
    },
    {
      "name": "search_wikipedia_by_location_tool",
      "description": "Find Wikipedia articles about a specific location.\n            \n            Discover information about neighborhoods, landmarks, attractions, and local\n            context for any city or area.\n            \n            Args:\n                city: City name to search for\n                state: Optional state filter (2-letter code like CA, NY)\n                query: Optional additional search terms\n                size: Number of results (1-20, default 10)\n                \n            Returns:\n                Location-specific Wikipedia articles with local information\n            ",
      "parameters": {
        "properties": {
          "city": {
            "title": "City",
            "type": "string"
          },
          "state": {
            "default": null,
            "title": "State",
            "type": "string"
          },
          "query": {
            "default": null,
            "title": "Query",
            "type": "string"
          },
          "size": {
            "default": 10,
            "title": "Size",
            "type": "integer"
          }
        },
        "required": [
          "city"
        ],
        "type": "object"
      }
    },
    {
      "name": "natural_language_search_tool",
      "description": "Advanced natural language semantic search with AI embeddings.\n            \n            Perform sophisticated natural language search using AI embeddings that understand\n            intent and context beyond simple keyword matching. Choose from different search types\n            to explore semantic understanding capabilities.\n            \n            Args:\n                query: Natural language query (e.g., \"cozy family home near good schools\")\n                search_type: Type of search:\n                    - \"semantic\": Pure AI embedding search (default)\n                    - \"examples\": Run 5 diverse example queries to show capabilities\n                    - \"comparison\": Compare semantic vs keyword search side-by-side\n                size: Number of results to return (1-50, default 10)\n                \n            Returns:\n                Advanced search results with AI-powered semantic understanding\n            ",
      "parameters": {
        "properties": {
          "query": {
            "title": "Query",
            "type": "string"
          },
          "search_type": {
            "default": "semantic",
            "title": "Search Type",
            "type": "string"
          },
          "size": {
            "default": 10,
            "title": "Size",
            "type": "integer"
          }
        },
        "required": [
          "query"
        ],
        "type": "object"
      }
    },
    {
      "name": "health_check_tool",
      "description": "Check the health status of all system components.\n            \n            Returns:\n                System health information including service statuses\n            ",
      "parameters": {
        "properties": {},
        "type": "object"
      }
    }
  ],
  "total_count": 6,
  "server_name": "MCP Server",
  "discovery_time_ms": 42.21796989440918
}