# SQUACK Pipeline Configuration
# Core configuration for DuckDB-based real estate data processing pipeline

name: squack_pipeline
version: 1.0.0

# Data Sources Configuration
data:
  input_path: real_estate_data
  output_path: ./output
  properties_file: properties_sf.json
  sample_size: null  # null means process all records

# DuckDB Configuration
duckdb:
  memory_limit: 8GB
  threads: 4

# Embedding Configuration (following common_embeddings patterns)
embedding:
  provider: mock  # Options: voyage, openai, ollama, gemini, mock
  
  # Voyage AI settings (recommended for real estate data)
  voyage_model: voyage-3  # 1024 dimensions, best semantic understanding
  # voyage_api_key: null  # Set via VOYAGE_API_KEY environment variable
  
  # OpenAI settings (if provider=openai)
  # openai_api_key: null  # Set via OPENAI_API_KEY env var
  openai_model: text-embedding-3-small
  
  # Ollama settings (if provider=ollama for local processing)
  ollama_base_url: http://localhost:11434
  ollama_model: nomic-embed-text
  
  # Mock settings (for testing without API keys)
  mock_dimension: 1024

# Text Processing Configuration
processing:
  batch_size: 50  # Smaller batches for API rate limits
  max_workers: 2  # Conservative for API limits
  show_progress: true
  rate_limit_delay: 0.1  # 100ms delay between API calls
  
  # Enable embeddings (can be disabled for faster processing)
  generate_embeddings: true
  
  # Chunking configuration
  enable_chunking: true
  chunk_method: semantic  # Options: simple, semantic, sentence, none
  chunk_size: 800
  chunk_overlap: 100
  
  # Semantic chunking parameters (for better real estate content splitting)
  breakpoint_percentile: 90
  buffer_size: 2

# Medallion Architecture Configuration
medallion:
  enable_bronze: true
  enable_silver: true
  enable_gold: true
  enable_geographic_enrichment: true

# Logging Configuration
logging:
  level: INFO

# Environment Configuration
environment: development  # development, production, test

# Metadata versioning
metadata_version: "1.0"